# Nginx配置文件 - /etc/nginx/sites-available/alethea

server {
    listen 80;
    server_name alethealab.cn www.alethealab.cn;
    
    # 重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name alethealab.cn www.alethealab.cn;
    
    # SSL证书配置
    ssl_certificate /etc/ssl/certs/alethealab.cn.crt;
    ssl_certificate_key /etc/ssl/private/alethealab.cn.key;
    
    # SSL安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 安全头
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 日志配置
    access_log /var/log/nginx/alethea_access.log;
    error_log /var/log/nginx/alethea_error.log;
    
    # 客户端上传限制
    client_max_body_size 16M;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 静态文件处理
    location /static/ {
        alias /home/alethea/alethea/src/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # 静态文件压缩
        location ~* \.(css|js)$ {
            gzip_static on;
        }
    }
    
    # 上传文件处理
    location /uploads/ {
        alias /home/alethea/alethea/uploads/;
        expires 1M;
        add_header Cache-Control "public";
    }
    
    # Favicon
    location = /favicon.ico {
        alias /home/alethea/alethea/src/static/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 健康检查
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 主应用代理
    location / {
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # WebSocket支持（如果需要）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # API路由特殊处理
    location /api/ {
        proxy_pass http://127.0.0.1:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API超时设置（更长）
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 阻止访问敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|log|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# 限制请求频率
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

# API限流
location /api/llm/ {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://127.0.0.1:8083;
    # ... 其他proxy设置
}

# 登录限流
location /api/user/login {
    limit_req zone=login burst=5 nodelay;
    proxy_pass http://127.0.0.1:8083;
    # ... 其他proxy设置
}
